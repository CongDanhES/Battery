#include "freertos/FreeRTOS.h"
#include <Arduino.h>
#include "DJIBattery.hpp"

uint8_t cmd1[]  = {0x55,0x0F,0x04,0xA2,0x03,0x0B,0x14,0x27,0x00,0x0D,0x43,0x00,0x00,0xC1,0x54};
uint8_t cmd_11[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xDB,0x02,0x40,0x0D,0xD1,0x00,0x93,0x7C};
uint8_t cmd_13[] = {0x55,0x12,0x04,0xC7,0x03,0x0B,0xFD,0x02,0x40,0x0D,0xEC,0x00,0xEC,0x47,0x48,0x63,0x67,0x85};
uint8_t cmd_15[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x20,0x03,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5B,0xF1};
uint8_t cmd_17[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x4C,0x03,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xEA,0x97};
uint8_t cmd_27[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x90,0x05,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2A,0x05};
uint8_t cmd_31[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x28,0x06,0x40,0x0D,0xD2,0x00,0x00,0x00,0xB7,0xF0};
uint8_t cmd_33[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x4B,0x06,0x40,0x0D,0x19,0x00,0xFB,0x12};
uint8_t cmd_35[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x6D,0x06,0x40,0x0D,0x03,0x00,0x80,0xE7};
uint8_t cmd_37[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x99,0x06,0x40,0x0D,0x02,0x00,0x57,0x2E};
uint8_t cmd_48[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0xDE,0x08,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3A,0x99};
uint8_t cmd_50[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x36,0x09,0x40,0x0D,0x23,0x00,0x04,0x01,0x4F,0x9F};
uint8_t cmd_54[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x77,0x09,0x40,0x0D,0xD2,0x00,0x00,0x00,0x78,0x66};
uint8_t cmd_56[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x9A,0x09,0x40,0x0D,0x19,0x00,0xEF,0x39};
uint8_t cmd_58[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xBC,0x09,0x40,0x0D,0x03,0x00,0x94,0xCC};
uint8_t cmd_60[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xE8,0x09,0x40,0x0D,0x02,0x00,0x81,0x85};
uint8_t cmd_72[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x32,0x0C,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5A,0xF3};
uint8_t cmd_74[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x8B,0x0C,0x40,0x0D,0x23,0x00,0x05,0x01,0x83,0xEA};
uint8_t cmd_78[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0xCC,0x0C,0x40,0x0D,0xD2,0x00,0x00,0x00,0xDD,0x17};
uint8_t cmd_80[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xEF,0x0C,0x40,0x0D,0x19,0x00,0x3D,0xCE};
uint8_t cmd_82[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x11,0x0D,0x40,0x0D,0x03,0x00,0x99,0x54};
uint8_t cmd_84[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x3E,0x0D,0x40,0x0D,0x02,0x00,0xA8,0xF5};
uint8_t cmd_95[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x86,0x0F,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA2,0xFB};
uint8_t cmd_97[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0xDF,0x0F,0x40,0x0D,0x23,0x00,0x02,0x01,0xB2,0x27};
uint8_t cmd_101[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x20,0x10,0x40,0x0D,0xD2,0x00,0x00,0x00,0x0F,0x30};
uint8_t cmd_103[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x43,0x10,0x40,0x0D,0x19,0x00,0x7B,0xBC};
uint8_t cmd_105[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x66,0x10,0x40,0x0D,0x03,0x00,0x7D,0x45};
uint8_t cmd_107[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x93,0x10,0x40,0x0D,0x02,0x00,0x81,0x88};
uint8_t cmd_118[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0xDC,0x12,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x18};
uint8_t cmd_120[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x35,0x13,0x40,0x0D,0x23,0x00,0x03,0x01,0x09,0x04};
uint8_t cmd_124[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x76,0x13,0x40,0x0D,0xD2,0x00,0x00,0x00,0x59,0xBB};
uint8_t cmd_126[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x99,0x13,0x40,0x0D,0x19,0x00,0x7A,0xCD};
uint8_t cmd_128[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xBC,0x13,0x40,0x0D,0x03,0x00,0x7C,0x34};
uint8_t cmd_130[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xE9,0x13,0x40,0x0D,0x02,0x00,0x42,0x79};
uint8_t cmd_142[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x33,0x16,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0xF1};
uint8_t cmd_146[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0xCC,0x16,0x40,0x0D,0xD2,0x00,0x00,0x00,0x43,0x4B};
uint8_t cmd_148[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xEF,0x16,0x40,0x0D,0x19,0x00,0xD5,0x36};
uint8_t cmd_150[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x12,0x17,0x40,0x0D,0x03,0x00,0x0C,0xA0};
uint8_t cmd_152[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x3F,0x17,0x40,0x0D,0x02,0x00,0x6B,0x09};
uint8_t cmd_164[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x88,0x19,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x92,0x5D};
uint8_t cmd_166[] = {0x55,0x3F,0x04,0x8F,0x03,0x0B,0xEA,0x19,0x40,0x0D,0x23,0x00,0x00,0x01,0x08,0x00,0x2C,0x05,0x31,0x89,0x7B,0x16,0xD3,0x4B,0xA3,0x7C,0x13,0xEA,0xD8,0xC8,0xC8,0x6C,0xAA,0x38,0xDE,0x1E,0xCF,0xD2,0x49,0x05,0x31,0x85,0x8F,0x1B,0xE7,0xBE,0xB9,0xFD,0x99,0x22,0xE6,0x5B,0x53,0xC4,0x34,0xA2,0x06,0xB3,0xDD,0xDF,0x48,0xE0,0xA9};
uint8_t cmd_170[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x36,0x1A,0x40,0x0D,0xD2,0x00,0x00,0x00,0x91,0x9F};
uint8_t cmd_172[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x58,0x1A,0x40,0x0D,0x19,0x00,0x46,0x9F};
uint8_t cmd_174[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x7B,0x1A,0x40,0x0D,0x03,0x00,0xBA,0x7E};
uint8_t cmd_176[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xA9,0x1A,0x40,0x0D,0x02,0x00,0xF7,0x2A};
uint8_t cmd_189[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x4B,0x1D,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA9,0x0D};
uint8_t cmd_191[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0xB6,0x1D,0x40,0x0D,0x23,0x00,0x01,0x01,0xAA,0xF0};
uint8_t cmd_195[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x04,0x1E,0x40,0x0D,0xD2,0x00,0x00,0x00,0x00,0x16};
uint8_t cmd_197[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x2D,0x1E,0x40,0x0D,0x19,0x00,0xD0,0x63};
uint8_t cmd_199[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x59,0x1E,0x40,0x0D,0x03,0x00,0x9C,0xDE};
uint8_t cmd_201[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x8B,0x1E,0x40,0x0D,0x02,0x00,0xD1,0x8A};
uint8_t cmd_213[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x47,0x21,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xDF,0xC5};
uint8_t cmd_218[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0xFF,0x21,0x40,0x0D,0xD2,0x00,0x00,0x00,0x49,0x3D};
uint8_t cmd_220[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x28,0x22,0x40,0x0D,0x19,0x00,0xB6,0xD4};
uint8_t cmd_222[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x54,0x22,0x40,0x0D,0x03,0x00,0xA2,0x48};
uint8_t cmd_224[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x87,0x22,0x40,0x0D,0x02,0x00,0xC4,0x18};
uint8_t cmd_236[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x56,0x25,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x56,0x7B};
uint8_t cmd_240[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x17,0x26,0x40,0x0D,0xD2,0x00,0x00,0x00,0x0E,0xCF};
uint8_t cmd_242[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x42,0x26,0x40,0x0D,0x19,0x00,0x19,0x57};
uint8_t cmd_244[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x70,0x26,0x40,0x0D,0x03,0x00,0x7E,0xF0};
uint8_t cmd_246[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xA5,0x26,0x40,0x0D,0x02,0x00,0xE2,0xB8};
uint8_t cmd_257[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x84,0x29,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0xAE};
uint8_t cmd_262[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x45,0x2A,0x40,0x0D,0xD2,0x00,0x00,0x00,0x72,0x4B};
uint8_t cmd_264[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x70,0x2A,0x40,0x0D,0x19,0x00,0xAF,0xEF};
uint8_t cmd_266[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x9E,0x2A,0x40,0x0D,0x03,0x00,0xFF,0x3C};
uint8_t cmd_268[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xD3,0x2A,0x40,0x0D,0x02,0x00,0x29,0x12};
uint8_t cmd_279[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0xA7,0x2D,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0D,0x9E};
uint8_t cmd_283[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x68,0x2E,0x40,0x0D,0xD2,0x00,0x00,0x00,0x29,0x28};
uint8_t cmd_286[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x93,0x2E,0x40,0x0D,0x19,0x00,0xD1,0x4C};
uint8_t cmd_288[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xC1,0x2E,0x40,0x0D,0x03,0x00,0x07,0x6C};
uint8_t cmd_290[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xF6,0x2E,0x40,0x0D,0x02,0x00,0xDE,0xAE};
uint8_t cmd_297[] = {0x55,0x0D,0x04,0x33,0x48,0x0B,0x00,0x00,0x40,0x00,0x01,0xD2,0xE7};
uint8_t cmd_303[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0xD5,0x31,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD2,0x32};
uint8_t cmd_305[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x96,0x32,0x40,0x0D,0xD2,0x00,0x00,0x00,0xEC,0x5F};
uint8_t cmd_307[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xC1,0x32,0x40,0x0D,0x19,0x00,0x96,0xC7};
uint8_t cmd_309[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xEF,0x32,0x40,0x0D,0x03,0x00,0xB5,0x13};
uint8_t cmd_311[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x24,0x33,0x40,0x0D,0x02,0x00,0x7F,0x2B};
// loop cmd
uint8_t cmd39[] = {0x55,0x16,0x04,0xFC,0x03,0x0B,0x85,0x71,0x40,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3B,0xC4};
uint8_t cmd20[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x5E,0x72,0x40,0x0D,0xD2,0x00,0x00,0x00,0x45,0x1B};
uint8_t cmd14[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0x8D,0x72,0x40,0x0D,0x19,0x00,0x91,0x35};
uint8_t cmdC1[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xBF,0x72,0x40,0x0D,0x03,0x00,0xF6,0x92};
uint8_t cmdD1[] = {0x55,0x0E,0x04,0x66,0x03,0x0B,0xFD,0x72,0x40,0x0D,0x02,0x00,0xA9,0x81};
uint8_t cmdC2[] = {0x55,0x11,0x04,0x92,0x02,0x0B,0x04,0x9C,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x45,0xE3};
uint8_t cmdID[] = {0x55,0x0D,0x04,0x33,0x02,0x0B,0x05,0x9C,0x40,0x00,0x01,0x2C,0x96};
uint8_t cmdC3[] = {0x55,0x11,0x04,0x92,0x02,0x0B,0x07,0x9C,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x42,0x35};
uint8_t cmdD2[] = {0x55,0x11,0x04,0x92,0x02,0x0B,0x0A,0x9C,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xD4,0x33};

uint8_t cmd39_sub[] =  {0x90,0x05,0x2A,0x05, 0xDE,0x08,0x3A,0x99, 0x32,0x0C,0x5A,0xF3, 
                    0x86,0x0F,0xA2,0xFB, 0xDC,0x12,0x0C,0x18, 0x33,0x16,0x52,0xF1, 
                    0x88,0x19,0x92,0x5D, 0x4B,0x1D,0xA9,0x0D, 0x47,0x21,0xDF,0xC5, 
                    0x56,0x25,0x56,0x7B, 0x84,0x29,0x38,0xAE, 0xA7,0x2D,0x0D,0x9E, 
                    0xD5,0x31,0xD2,0x32, 0x12,0x36,0xA7,0x9F, 0x72,0x3A,0xAB,0x42, 
                    0xD5,0x3E,0xF9,0x07, 0x48,0x43,0x90,0x87, 0xE2,0x47,0xF2,0xA0, 
                    0x7B,0x4C,0xED,0x42, 0x14,0x51,0x78,0x5F, 0xD9,0x55,0x4D,0xEE, 
                    0x74,0x5A,0x37,0x9A, 0x0C,0x5F,0x4A,0x56, 0xA4,0x63,0xE4,0x4E, 
                    0x3C,0x68,0x11,0xD2, 0xD8,0x6C,0x12,0x57, 0x85,0x71,0x3B,0xC4, 
                    0x38,0x76,0xFE,0x4B, 0xF8,0x7A,0x93,0xB5, 0xBF,0x7F,0x62,0x95, 
                    0x85,0x84,0xA1,0x9D, 0x4F,0x89,0xD6,0x74, 0x1B,0x8E,0x94,0x0A, 
                    0xE9,0x92,0x95,0x20, 0xB5,0x97,0xEE,0xBA, 0x83,0x9C,0x74,0xE4, 
                    0x48,0xA1,0x99,0x9C, 0x0E,0xA6,0xD8,0xC9, 0xD6,0xAA,0x01,0x0E,
                    0x9B,0xAF,0x47,0x3C, 0x60,0xB4,0x8C,0x9F, 0x25,0xB9,0xC1,0x6F, 
                    0xEA,0xBD,0x20,0x23, 0xAF,0xC2,0x16,0x54, 0x74,0xC7,0x34,0x38, 
                    0x3F,0xCC,0x99,0x34, 0x04,0xD1,0x0D,0x4F, 0xC9,0xD5,0x38,0xFE, 
                    0x90,0xDA,0x22,0xCF, 0x59,0xDF,0x03,0x88, 0x23,0xE4,0x5C,0x66, 
                    0xF1,0xE8,0x32,0xB3, 0xB6,0xED,0xC3,0x93, 0x64,0xF2,0x8A,0x12, 
                    0xF9,0xF6,0x07,0x36, 0x8C,0xFB,0x22,0xB5, 0x1F,0x00,0x09,0x0F, 
                    0xB3,0x04,0x06,0x26, 0x46,0x09,0xFD,0x23, 0xD9,0x0D,0xA4,0xFA, 
                    0x6C,0x12,0xBA,0xED, 0xFF,0x16,0x39,0x28, 0x92,0x1B,0xA8,0x92, 
                    0x25,0x20,0x76,0xDB, 0xB8,0x24,0xFB,0xFF, 0x4B,0x29,0x6D,0xF4, 
                    0xDE,0x2D,0x83,0x3F, 0x71,0x32,0xFD,0xEC, 0x09,0x37,0x80,0x20, 
                    0x9D,0x3B,0xEC,0xB8, 0x32,0x40,0xD7,0xAB, 0xC6,0x44,0x03,0xF8, 
                    0x5A,0x49,0xA1,0x8A, 0xED,0x4D,0x24,0x19, 0x82,0x52,0xEB,0x0F, 
                    0x16,0x57,0x42,0xBF, 0xA9,0x5B,0xCC,0xEE, 0x3C,0x60,0x79,0xFF, 
                    0xD0,0x64,0x19,0x95, 0x63,0x69,0xE0,0xDD, 0xF6,0x6D,0x0E,0x16, 
                    0x8A,0x72,0x28,0x55, 0x1E,0x77,0x81,0xE5, 0xB1,0x7B,0xD8,0x62, 
                    0x44,0x80,0x4E,0x30, 0xD7,0x84,0xCD,0xF5, 0x6B,0x89,0xD0,0x22, 
                    0xFF,0x8D,0xD4,0x97, 0x93,0x92,0x25,0x02, 0x27,0x97,0x33,0x17, 
                    0xBA,0x9B,0xD6,0x1E, 0x4E,0xA0,0x59,0x97};

uint8_t cmd20_sub[] = {0x77,0x09,0x78,0x66, 0xCC,0x0C,0xDD,0x17, 0x20,0x10,0x0F,0x30, 
                0x76,0x13,0x59,0xBB, 0xCC,0x16,0x43,0x4B, 0x04,0x1E,0x00,0x16, 
                0xFF,0x21,0x49,0x3D, 0x17,0x26,0x0E,0xCF, 0x45,0x2A,0x72,0x4B, 
                0x68,0x2E,0x29,0x28, 0x96,0x32,0xEC,0x5F, 0xDC,0x36,0xB8,0x73, 
                0x3D,0x3B,0xAB,0xC4, 0xA0,0x3F,0x9A,0x81, 0x1D,0x44,0xE3,0x7A, 
                0xB7,0x48,0xB8,0x90, 0x4F,0x4D,0x3C,0x0E, 0xAE,0x56,0x2B,0x54, 
                0x48,0x5B,0x36,0x7F, 0xE0,0x5F,0xEE,0x40, 0x78,0x64,0x00,0x5D, 
                0x10,0x69,0xF2,0x8D, 0xAF,0x6D,0x5C,0x75, 0x5E,0x72,0x45,0x1B, 
                0x12,0x77,0x75,0xB5, 0xD4,0x7B,0x4D,0xB7, 0x9B,0x80,0xDD,0x82, 
                0x61,0x85,0x36,0x17, 0x2D,0x8A,0x51,0x50, 0xF9,0x8E,0x92,0xDC, 
                0xC7,0x93,0x91,0x9A, 0x93,0x98,0x44,0xC4, 0x5F,0x9D,0x96,0xA1, 
                0xEB,0xA6,0xEA,0x31, 0xB2,0xAB,0x2F,0x8D, 0x77,0xB0,0x16,0x77, 
                0x3C,0xB5,0x28,0x45, 0x01,0xBA,0x89,0x0B, 0xC6,0xBE,0xE2,0x56, 
                0x8B,0xC3,0xCD,0xB6, 0x50,0xC8,0x48,0x92, 0x1B,0xCD,0x76,0xA0, 
                0xE0,0xD1,0xD2,0x40, 0xA6,0xD6,0x8A,0xFF, 0x6D,0xDB,0xBA,0xD8, 
                0x36,0xE0,0x97,0xE1, 0x00,0xE5,0x0D,0xE1, 0xCD,0xE9,0x59,0x44, 
                0x92,0xEE,0x7A,0x0C, 0x37,0xF3,0x8F,0x7D, 0xCC,0xF7,0x0E,0xF6, 
                0x5F,0xFC,0xC6,0x9A, 0xF2,0x00,0xC2,0x7B, 0x86,0x05,0xC6,0x15, 
                0x19,0x0A,0x1A,0x2D, 0xAC,0x0E,0x67,0xF3, 0x3F,0x13,0xAB,0x72, 
                0x49,0x33,0xE0,0x84, 0xDD,0x37,0xD2,0x6D, 0x72,0x3C,0xF0,0xD7, 
                0x06,0x41,0x54,0x76, 0x9A,0x45,0xDA,0xB2, 0x2D,0x4A,0x4A,0x11, 
                0x56,0x53,0xAF,0xCA, 0xCA,0x6E,0x52,0x99, 0x5E,0x73,0x90,0x84, 
                0x22,0xA1,0xE2,0xF4, 0x66,0x0B,0x11,0xC0};

uint8_t cmd14_sub[] = {0x4B,0x06,0xFB,0x12, 0x9A,0x09,0xEF,0x39, 0xEF,0x0C,0x3D,0xCE, 
                0x43,0x10,0x7B,0xBC, 0x99,0x13,0x7A,0xCD, 0xEF,0x16,0xD5,0x36, 
                0x58,0x1A,0x46,0x9F, 0x2D,0x1E,0xD0,0x63, 0x28,0x22,0xB6,0xD4, 
                0x42,0x26,0x19,0x57, 0x70,0x2A,0xAF,0xEF, 0x93,0x2E,0xD1,0x4C, 
                0xC1,0x32,0x96,0xC7, 0x09,0x37,0xE9,0xC7, 0x6A,0x3B,0x15,0x3B, 
                0xCD,0x3F,0x16,0x8A, 0x4C,0x44,0x80,0xD9, 0xE6,0x48,0x7C,0x07, 
                0x7E,0x4D,0x62,0x47, 0x20,0x52,0x1D,0xE0, 0xDD,0x56,0x71,0x38, 
                0x77,0x5B,0xC9,0xED, 0x0F,0x60,0xAD,0x9A, 0xA7,0x64,0x27,0x16, 
                0x3F,0x69,0x19,0x0C, 0xDE,0x6D,0x31,0xA7, 0x8D,0x72,0x91,0x35, 
                0x41,0x77,0x42,0x25, 0x03,0x7C,0x29,0x68, 0xCA,0x80,0xBF,0xA2, 
                0x90,0x85,0x84,0xED, 0x5C,0x8A,0xFF,0xB1, 0x28,0x8F,0x06,0x42, 
                0xF6,0x93,0x17,0xFD, 0xC2,0x98,0x87,0x6D, 0x8E,0x9D,0x7F,0x69, 
                0x54,0xA2,0x9F,0xBB, 0x1A,0xA7,0xB8,0xA6, 0xE1,0xAB,0x0E,0x3C, 
                0xA6,0xB0,0xA2,0xD1, 0x6B,0xB5,0x5A,0xC5, 0x30,0xBA,0xE2,0xC2, 
                0xF5,0xBE,0x06,0xFC, 0xBA,0xC3,0xD9,0xAA, 0x7F,0xC8,0xC1,0xFE, 
                0x4A,0xCD,0x4B,0x1A, 0x0F,0xD2,0xA1,0xD2, 0xD5,0xD6,0x7C,0x93, 
                0x9C,0xDB,0xAA,0xC8, 0x65,0xE0,0x47,0xBE, 0x2F,0xE5,0xCC,0xB3, 
                0xFC,0xE9,0xCB,0x9C, 0xC1,0xEE,0x18,0x5E, 0x64,0xF3,0x69,0x02, 
                0xF9,0xF7,0xB4,0x5D, 0x8C,0xFC,0xDE,0xCB, 0x1F,0x01,0x63,0x63, 
                0xB3,0x05,0x45,0xFF, 0x46,0x0A,0x9D,0x41, 0xD9,0x0E,0x16,0x16, 
                0x6C,0x13,0xD7,0x08, 0xFF,0x17,0xA8,0x6E, 0x92,0x1C,0x2A,0x9B, 
                0x25,0x21,0x2C,0xED, 0xB8,0x25,0xF1,0xB2, 0x4B,0x2A,0xD3,0x14, 
                0xDE,0x2E,0x56,0x6A, 0x76,0x33,0x71,0x12, 0x0A,0x38,0x68,0xA1, 
                0x9F,0x3C,0xED,0xDF, 0x33,0x41,0x5C,0x07, 0xC7,0x45,0x43,0xFA, 
                0x5A,0x4A,0x72,0xE2, 0xEE,0x4E,0xBC,0x1D, 0x83,0x53,0xE6,0x67, 
                0x16,0x58,0x9F,0x73, 0xA9,0x5C,0x74,0xA1, 0x3D,0x61,0x6F,0x5E, 
                0xD0,0x65,0xB3,0xC4, 0x63,0x6A,0x40,0x60, 0xF7,0x6E,0xEE,0x1A, 
                0x8B,0x73,0x2F,0x26, 0x1E,0x78,0x56,0x32, 0xB1,0x7C,0x0D,0xA2, 
                0x44,0x81,0xFB,0x95, 0xD8,0x85,0x0D,0xCE, 0x6C,0x8A,0x2F,0x76, 
                0x00,0x8F,0x3E,0xE6, 0x94,0x93,0xF0,0x72, 0x27,0x98,0x13,0xFB, 
                0xBB,0x9C,0xE5,0xA0, 0x4F,0xA1,0x4F,0xD8}; 

uint8_t cmdC1_sub[] = {0x6D,0x06,0x80,0xE7, 0xBC,0x09,0x94,0xCC, 0x11,0x0D,0x99,0x54, 
                0x66,0x10,0x7D,0x45, 0xBC,0x13,0x7C,0x34, 0x12,0x17,0x0C,0xA0, 
                0x7B,0x1A,0xBA,0x7E, 0x59,0x1E,0x9C,0xDE, 0x54,0x22,0xA2,0x48, 
                0x70,0x26,0x7E,0xF0, 0x9E,0x2A,0xFF,0x3C, 0xC1,0x2E,0x07,0x6C, 
                0xEF,0x32,0xB5,0x13, 0x3B,0x37,0x8E,0x60, 0x9A,0x3B,0x57,0x93, 
                0xFD,0x3F,0x27,0x25, 0x7E,0x44,0xE7,0x7E, 0x18,0x49,0xD8,0x9D, 
                0xB0,0x4D,0x52,0x11, 0x52,0x52,0xAB,0x45, 0x0F,0x57,0x41,0x16, 
                0xA9,0x5B,0x49,0xF9, 0x41,0x60,0x3F,0xC9, 0xD9,0x64,0x65,0x82, 
                0x71,0x69,0x8B,0x5F, 0x10,0x6E,0xCD,0xEC, 0xBF,0x72,0xF6,0x92, 
                0x73,0x77,0x25,0x82, 0x35,0x7C,0xE2,0xDF, 0xFC,0x80,0x74,0x15, 
                0xC2,0x85,0x52,0xCD, 0x8E,0x8A,0x8B,0x94, 0x5B,0x8F,0x9B,0xE3, 
                0x28,0x94,0x4B,0xD9, 0xF4,0x98,0x4C,0xDA, 0xC0,0x9D,0x64,0x2B, 
                0x86,0xA2,0x62,0x8F, 0x4C,0xA7,0x4B,0x87, 0x13,0xAC,0x4F,0xBD, 
                0xD8,0xB0,0x69,0x54, 0x9D,0xB5,0x6B,0x64, 0x62,0xBA,0xBD,0xF3, 
                0x27,0xBF,0xBF,0xC3, 0xEC,0xC3,0x2A,0x8B, 0xB1,0xC8,0x78,0xB9, 
                0x7C,0xCD,0x80,0xAD, 0x41,0xD2,0x33,0x81, 0x07,0xD7,0x4C,0xBD, 
                0xCE,0xDB,0x7C,0xE8, 0x98,0xE0,0xDA,0x23, 0x62,0xE5,0x23,0xEC, 
                0x2E,0xEA,0xFA,0xB5, 0xF3,0xEE,0xF6,0xE8, 0x94,0xF3,0xA2,0xBB, 
                0x29,0xF8,0xE3,0x0B, 0xBC,0xFC,0x66,0x75, 0x4F,0x01,0x6A,0x5A, 
                0xE3,0x05,0x4C,0xC6, 0x76,0x0A,0x25,0xFF, 0x09,0x0F,0xF9,0x21, 
                0x9C,0x13,0x1C,0xB1, 0x2F,0x18,0xFF,0x38, 0xC2,0x1C,0x23,0xA2, 
                0x55,0x21,0x45,0x51, 0xE8,0x25,0xF8,0x8B, 0x7B,0x2A,0x6B,0xAA, 
                0x0E,0x2F,0xB9,0x5D, 0xA6,0x33,0x53,0x3F, 0x3A,0x38,0x59,0x0E, 
                0xCF,0x3C,0x6D,0xF7, 0x63,0x41,0xDC,0x2F, 0xF7,0x45,0x72,0x55, 
                0x8A,0x4A,0x50,0xCF, 0x1E,0x4F,0xBA,0xBE, 0xB3,0x53,0xD7,0xC8, 
                0x46,0x58,0x1F,0x5B, 0xD9,0x5C,0x94,0x0C, 0x6D,0x61,0xEF,0x76, 
                0x00,0x66,0x5D,0xF4, 0x93,0x6A,0x02,0xC8, 0x27,0x6F,0x88,0x3C, 
                0xBB,0x73,0x1E,0x89, 0x4E,0x78,0xD6,0x1A, 0xE1,0x7C,0x8D,0x8A, 
                0x74,0x81,0xCA,0x3A, 0x08,0x86,0xE3,0xFE, 0x9C,0x8A,0x6D,0xDE, 
                0x30,0x8F,0x0F,0x49, 0xC4,0x93,0x70,0x5A, 0x57,0x98,0xF3,0x56, 
                0xEB,0x9C,0x65,0x88, 0x7F,0xA1,0x7E,0x77};

uint8_t cmdD1_sub[] = {0x99,0x06,0x57,0x2E, 0xE8,0x09,0x81,0x85, 0x3E,0x0D,0xA8,0xF5, 
                0x93,0x10,0x81,0x88, 0xE9,0x13,0x42,0x79, 0x3F,0x17,0x6B,0x09, 
                0xA9,0x1A,0xF7,0x2A, 0x8B,0x1E,0xD1,0x8A, 0x87,0x22,0xC4,0x18, 
                0xA5,0x26,0xE2,0xB8, 0xD3,0x2A,0x29,0x12, 0xF6,0x2E,0xDE,0xAE, 
                0x24,0x33,0x7F,0x2B, 0x70,0x37,0xA2,0x56, 0xD1,0x3B,0x7B,0xA5, 
                0x34,0x40,0xF0,0x61, 0xB8,0x44,0xB6,0x78, 0x52,0x49,0xDF,0xAF, 
                0xEA,0x4D,0xE5,0x61, 0x94,0x52,0xFA,0x43, 0x49,0x57,0xB2,0x15, 
                0xE3,0x5B,0x4E,0xCB, 0x7B,0x60,0x39,0x3E, 0x13,0x65,0x84,0xBE, 
                0xAB,0x69,0x9E,0x2A, 0x4E,0x6E,0xD6,0x8C, 0xFD,0x72,0xA9,0x81, 
                0xB4,0x77,0x5F,0x80, 0x77,0x7C,0xBD,0xCC, 0x3E,0x81,0xCD,0x08, 
                0x04,0x86,0xCF,0xD6, 0xD0,0x8A,0x90,0xF4, 0x9D,0x8F,0xCA,0xE5, 
                0x6A,0x94,0x14,0xCA, 0x36,0x99,0xF5,0xC7, 0x02,0x9E,0x55,0x20, 
                0xC8,0xA2,0xC9,0xAD, 0x8E,0xA7,0xB6,0x91, 0x55,0xAC,0xBC,0xBE, 
                0x1A,0xB1,0xD0,0x49, 0xDF,0xB5,0x34,0x77, 0xA4,0xBA,0xEC,0xF5, 
                0x69,0xBF,0x14,0xE1, 0x2E,0xC4,0x0B,0xAD, 0xF3,0xC8,0x27,0xAA, 
                0xBE,0xCD,0x7D,0xBB, 0x83,0xD2,0xCE,0x97, 0x49,0xD7,0xE7,0x9F, 
                0x10,0xDC,0x19,0xBD, 0xDA,0xE0,0x85,0x30, 0xA4,0xE5,0x72,0xEA, 
                0x70,0xEA,0xE1,0xD5, 0x35,0xEF,0xE3,0xE5, 0xD4,0xF3,0xAB,0xA0, 
                0x69,0xF8,0xEA,0x10, 0xFC,0xFC,0x6F,0x6E, 0x8F,0x01,0xC1,0x44, 
                0x23,0x06,0x2B,0xC5, 0xB6,0x0A,0x8E,0xE1, 0x49,0x0F,0xF0,0x3A, 
                0xDC,0x13,0x15,0xAA, 0x6F,0x18,0xF6,0x23, 0x02,0x1D,0xCC,0xB7, 
                0x95,0x21,0xEE,0x4F, 0x28,0x26,0x9F,0x88, 0xBB,0x2A,0xC0,0xB4, 
                0x4E,0x2F,0xB0,0x46, 0xE6,0x33,0x5A,0x24, 0x7A,0x38,0x50,0x15, 
                0x0F,0x3D,0x82,0xE2, 0xA3,0x41,0x77,0x31, 0x37,0x46,0x15,0x56, 
                0xCA,0x4A,0x59,0xD4, 0x5E,0x4F,0xB3,0xA5, 0xF3,0x53,0xDE,0xD3, 
                0x86,0x58,0xB4,0x45, 0x19,0x5D,0x7B,0x19, 0xAD,0x61,0x44,0x68, 
                0x40,0x66,0x54,0xEF, 0xD3,0x6A,0x0B,0xD3, 0x67,0x6F,0x81,0x27, 
                0xFB,0x73,0x17,0x92, 0x8E,0x78,0x7D,0x04, 0x21,0x7D,0x62,0x9F, 
                0xB4,0x81,0x61,0x24, 0x48,0x86,0xEA,0xE5, 0xDC,0x8A,0x64,0xC5, 
                0x70,0x8F,0x06,0x52, 0x04,0x94,0x07,0x74, 0x97,0x98,0x58,0x48, 
                0x2B,0x9D,0x8A,0x9D, 0xBF,0xA1,0xD5,0x69};      

uint8_t cmdC2_sub[] = {0x9A,0x9A,0x62,0x1E, 0xAF,0x9A,0xD7,0x64, 0xD2,0x9A,0xCB,0x87, 
                0xE7,0x9A,0x7E,0xFD, 0xFD,0x9A,0xDA,0xE6, 0x17,0x9B,0xD8,0x56, 
                0x2A,0x9B,0xA7,0x53, 0x3F,0x9B,0x2B,0xDE, 0x54,0x9B,0xBC,0x66, 
                0x65,0x9B,0xEC,0x23, 0x88,0x9B,0xB3,0xFB, 0xB3,0x9B,0xD3,0x5A, 
                0xDC,0x9B,0xA1,0xDD, 0x04,0x9C,0x45,0xE3, 0x32,0x9C,0xF7,0x4F, 
                0x59,0x9C,0x60,0xF7, 0x87,0x9C,0x95,0xF1, 0xB1,0x9C,0x27,0x5D, 
                0xDB,0x9C,0x4D,0xA8, 0x16,0x9D,0x94,0x06, 0x2E,0x9D,0xF3,0x71, 
                0x45,0x9D,0x64,0xC9, 0x6E,0x9D,0x90,0x97, 0x7A,0x9D,0xE1,0x57, 
                0x8F,0x9D,0xE0,0x0F, 0xA7,0x9D,0x13,0x87, 0xB9,0x9D,0x52,0xA3, 
                0xC8,0x9D,0x61,0x00, 0xE8,0x9D,0x58,0xF7, 0xFA,0x9D,0x36,0x93, 
                0x13,0x9E,0x5C,0xFE, 0x20,0x9E,0xF6,0x20, 0x3A,0x9E,0x52,0x3B, 
                0x46,0x9E,0xB3,0x95, 0x59,0x9E,0x0F,0xFC, 0x6E,0x9E,0x40,0x1D, 
                0x7F,0x9E,0x29,0xAF, 0x90,0x9E,0x8C,0xEC, 0xA2,0x9E,0xDB,0x7F, 
                0xAF,0x9E,0x09,0x72, 0xCC,0x9E,0x54,0xB5, 0xDC,0x9E,0xC0,0x4A, 
                0xED,0x9E,0x90,0x0F, 0x00,0x9F,0x70,0x56, 0x10,0x9F,0xE4,0xA9, 
                0x26,0x9F,0x56,0x05, 0x34,0x9F,0x38,0x61, 0x48,0x9F,0xD9,0xCF, 
                0x57,0x9F,0x65,0xA6, 0x68,0x9F,0xE0,0x38, 0x7C,0x9F,0x91,0xF8, 
                0x8B,0x9F,0x6A,0x3B, 0x9F,0x9F,0x1B,0xFB, 0xB1,0x9F,0xF7,0xD7, 
                0xC0,0x9F,0xC4,0x74, 0xD2,0x9F,0xAA,0x10, 0xE7,0x9F,0x1F,0x6A, 
                0xF6,0x9F,0x76,0xD8, 0x0B,0xA0,0x87,0xA3, 0x18,0xA0,0x14,0x8A, 
                0x36,0xA0,0xF8,0xA6, 0x46,0xA0,0x36,0x48, 0x56,0xA0,0xA2,0xB7, 
                0x67,0xA0,0xF2,0xF2, 0x7B,0xA0,0x49,0x4D, 0x8B,0xA0,0x50,0x67, 
                0x9E,0xA0,0xDC,0xEA, 0xAE,0xA0,0x71,0xE2, 0xC1,0xA0,0x03,0x65, 
                0xD2,0xA0,0x90,0x4C, 0xE5,0xA0,0xDF,0xAD, 0xF5,0xA0,0x4B,0x52, 
                0x0A,0xA1,0xC5,0x6F, 0x1C,0xA1,0x4E,0x34, 0x2E,0xA1,0x19,0xA7, 
                0x3E,0xA1,0x8D,0x58, 0x54,0xA1,0xE7,0xAD, 0x63,0xA1,0xA8,0x4C, 
                0x76,0xA1,0x24,0xC1};

uint8_t cmdID_sub[] = {0xA0,0x9A,0x26,0x11, 0xB3,0x9A,0xAA,0xB8, 0xD1,0x9A,0x91,0x0F, 
                0xE6,0x9A,0x9C,0xEB, 0xFF,0x9A,0xB8,0x0E, 0x16,0x9B,0x81,0x68, 
                0x2C,0x9B,0xF8,0xF0, 0x40,0x9B,0x7B,0x26, 0x53,0x9B,0xF7,0x8F, 
                0x67,0x9B,0x36,0x76, 0x8A,0x9B,0xA4,0x21, 0xB2,0x9B,0x55,0xAF, 
                0xDF,0x9B,0x92,0x72, 0x05,0x9C,0x2C,0x96, 0x30,0x9C,0xA9,0x64, 
                0x5B,0x9C,0xF6,0x82, 0x85,0x9C,0x79,0x1C, 0xB0,0x9C,0xFC,0xEE, 
                0xD7,0x9C,0x93,0x7F, 0xFE,0x9C,0x66,0x4E, 0x15,0x9D,0xD7,0x3E, 0x2F,0x9D,0xAE,0xA6, 
                0x48,0x9D,0xC1,0x37, 0x6C,0x9D,0x40,0x7A, 0x7C,0x9D,0x00,0xCE, 
                0x8E,0x9D,0x2E,0x47, 0xA6,0x9D,0x9F,0x7D, 0xBB,0x9D,0xAB,0xB5, 
                0xCA,0x9D,0x1C,0xAB, 0xE7,0x9D,0xF9,0xB7, 0xFD,0x9D,0x11,0x4F, 
                0x12,0x9E,0xC6,0x2B, 0x22,0x9E,0x17,0xFF, 0x37,0x9E,0x03,0x6D, 
                0x48,0x9E,0x0C,0x12, 0x5B,0x9E,0x80,0xBB, 0x6A,0x9E,0x15,0x64, 
                0x82,0x9E,0xD3,0x15, 0x8D,0x9E,0x2F,0x7F, 0xA0,0x9E,0xCA,0x63, 
                0xB2,0x9E,0x02,0xC1, 0xCF,0x9E,0x85,0xA8, 0xDD,0x9E,0x4D,0x0A, 
                0xEF,0x9E,0x14,0xC8, 0xFF,0x9E,0x54,0x7C, 0x11,0x9F,0xB1,0x2A, 
                0x25,0x9F,0x70,0xD3, 0x35,0x9F,0x30,0x67, 0x45,0x9F,0xC3,0x72, 
                0x5A,0x9F,0x7F,0xAC, 0x6C,0x9F,0x36,0x43, 0x7D,0x9F,0x32,0xFC, 
                0x8F,0x9F,0x1C,0x75, 0x9E,0x9F,0x18,0xCA, 0xB2,0x9F,0xB9,0xDD, 
                0xC5,0x9F,0x96,0xF8, 0xD5,0x9F,0xD6,0x4C, 0xEB,0x9F,0xBF,0xF9, 
                0xF9,0x9F,0x77,0x5B, 0x08,0xA0,0x9E,0x31, 0x17,0xA0,0x22,0xEF, 
                0x38,0xA0,0x4F,0xE5, 0x48,0xA0,0xBC,0xF0, 0x59,0xA0,0xB8,0x4F, 
                0x69,0xA0,0x69,0x9B, 0x7A,0xA0,0xE5,0x32, 0x8D,0xA0,0x9F,0x9D, 
                0x9F,0xA0,0x57,0x3F, 0xAF,0xA0,0x86,0xEB, 0xC2,0xA0,0x41,0x36, 
                0xD1,0xA0,0xCD,0x9F, 0xE8,0xA0,0x78,0x1A, 0xF8,0xA0,0x38,0xAE, 
                0x0B,0xA1,0xE9,0x30, 0x1B,0xA1,0xA9,0x84, 0x2C,0xA1,0xA4,0x60, 
                0x43,0xA1,0xEB,0xAB, 0x53,0xA1,0xAB,0x1F, 0x66,0xA1,0x2E,0xED, 
                0x74,0xA1,0xE6,0x4F};

uint8_t cmdC3_sub[] = {0x9D,0x9A,0x80,0xF7, 0xB2,0x9A,0x91,0x96, 0xD5,0x9A,0x29,0x6E, 
                0xEA,0x9A,0xAC,0xF0, 0xFE,0x9A,0xDD,0x30, 0x18,0x9B,0xF0,0xC0, 
                0x31,0x9B,0xFE,0x05, 0x43,0x9B,0xCA,0x70, 0x5B,0x9B,0x94,0xF0, 
                0x68,0x9B,0x3E,0x2E, 0x8C,0x9B,0x56,0xC4, 0xB4,0x9B,0x31,0xB3, 
                0xDE,0x9B,0x5B,0x46, 0x07,0x9C,0x42,0x35, 0x34,0x9C,0xE8,0xEB, 
                0x5D,0x9C,0x85,0xC8, 0x89,0x9C,0x40,0x2A, 0xB3,0x9C,0xDD,0xC6, 
                0xDC,0x9C,0xAF,0x41, 0x17,0x9D,0x69,0x4B, 0x31,0x9D,0x4F,0x18, 
                0x4A,0x9D,0x4C,0x5F, 0x70,0x9D,0xD1,0xB3, 0x7D,0x9D,0x03,0xBE, 
                0x91,0x9D,0xA1,0x2B, 0xAB,0x9D,0x3C,0xC7, 0xBE,0x9D,0xB0,0x4A, 
                0xC9,0x9D,0x9C,0x4D, 0xE9,0x9D,0xA5,0xBA, 0xFB,0x9D,0xCB,0xDE, 
                0x14,0x9E,0xBE,0x17, 0x21,0x9E,0x0B,0x6D, 0x3B,0x9E,0xAF,0x76, 
                0x4B,0x9E,0x61,0x98, 0x5D,0x9E,0xEA,0xC3, 0x6F,0x9E,0xBD,0x50, 
                0x83,0x9E,0x1F,0xC5, 0x92,0x9E,0x76,0x77, 0xA5,0x9E,0x39,0x96, 
                0xB0,0x9E,0xB5,0x1B, 0xCD,0x9E,0xA9,0xF8, 0xE0,0x9E,0x42,0x02, 
                0xF1,0x9E,0x2B,0xB0, 0x02,0x9F,0x8A,0xCD, 0x15,0x9F,0xFC,0xDB, 
                0x27,0x9F,0xAB,0x48, 0x39,0x9F,0xEA,0x6C, 0x49,0x9F,0x24,0x82, 
                0x5C,0x9F,0xA8,0x0F, 0x6A,0x9F,0x1A,0xA3, 0x7E,0x9F,0x6B,0x63, 
                0x8E,0x9F,0x72,0x49, 0xA2,0x9F,0x64,0xFE, 0xB3,0x9F,0x0D,0x4C, 
                0xC2,0x9F,0x3E,0xEF, 0xD4,0x9F,0xB5,0xB4, 0xE8,0x9F,0x37,0xFC, 
                0xF7,0x9F,0x8B,0x95, 0x0C,0xA0,0x65,0x4A, 0x1D,0xA0,0x0C,0xF8, 
                0x37,0xA0,0x05,0xEB, 0x49,0xA0,0x1E,0xDE, 0x5A,0xA0,0x8D,0xF7, 
                0x6A,0xA0,0x20,0xFF, 0x7C,0xA0,0xAB,0xA4, 0x8C,0xA0,0xB2,0x8E, 
                0xA3,0xA0,0xA3,0xEF, 0xB0,0xA0,0x30,0xC6, 0xC3,0xA0,0xF9,0xFE, 
                0xD3,0xA0,0x6D,0x01, 0xE7,0xA0,0x25,0x36, 0xF9,0xA0,0x64,0x12, 
                0x0E,0xA1,0x20,0x50, 0x1E,0xA1,0xB4,0xAF, 0x2F,0xA1,0xE4,0xEA, 
                0x3F,0xA1,0x70,0x15, 0x55,0xA1,0x1A,0xE0, 0x65,0xA1,0xB7,0xE8, 
                0x78,0xA1,0xF1,0x1A};

uint8_t cmdD2_sub[] = {0x95,0x9A,0x5F,0x8B, 0xB5,0x9A,0x37,0x74, 0xD7,0x9A,0x97,0xFE, 
                0xEB,0x9A,0x15,0xB6, 0x04,0x9B,0x0F,0x74, 0x2B,0x9B,0x1E,0x15, 
                0x41,0x9B,0x74,0xE0, 0x5A,0x9B,0x2D,0xB6, 0x6D,0x9B,0x62,0x57, 
                0x94,0x9B,0x4C,0x4F, 0xBD,0x9B,0x42,0x8A, 0x0A,0x9C,0xD4,0x33, 
                0x60,0x9C,0xBE,0xC6, 0x90,0x9C,0xA7,0xEC, 0xBB,0x9C,0x53,0xB2, 
                0x1A,0x9D,0xFF,0x4D, 0x4D,0x9D,0xEA,0xBD, 0x80,0x9D,0x8C,0x92, 
                0xAC,0x9D,0x9A,0x25, 0xCE,0x9D,0x3A,0xAF, 0x03,0x9E,0x8C,0x0A, 
                0x25,0x9E,0xAA,0x59, 0x3C,0x9E,0x09,0x94, 0x4E,0x9E,0x3D,0xE1, 
                0x72,0x9E,0xBF,0xA9, 0x94,0x9E,0x2D,0xD8, 0xB7,0x9E,0x13,0xF9, 
                0xD1,0x9E,0x56,0x4C, 0xF3,0x9E,0x95,0x20, 0x16,0x9F,0xBF,0x06, 
                0x3A,0x9F,0xA9,0xB1, 0x5D,0x9F,0x11,0x49, 0x81,0x9F,0x1E,0xD4, 
                0xA4,0x9F,0x3F,0x51, 0xC6,0x9F,0x9F,0xDB, 0xDA,0x9F,0x24,0x64, 
                0xFD,0x9F,0xFF,0x7A, 0x1E,0xA0,0x4F,0x25, 0x3A,0xA0,0x93,0xED, 
                0x5C,0xA0,0xD6,0x58, 0x7F,0xA0,0xE8,0x79, 0x93,0xA0,0x4A,0xEC, 
                0xA4,0xA0,0x05,0x0D, 0xC7,0xA0,0x58,0xCA, 0xEB,0xA0,0x4E,0x7D, 
                0xFD,0xA0,0xC5,0x26, 0x0F,0xA1,0x99,0x16, 0x21,0xA1,0x75,0x3A, 
                0x32,0xA1,0xE6,0x13, 0x46,0xA1,0xCD,0xC2, 0x67,0xA1,0x09,0x78};

uint8_t cmdB6[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0xD3,0x89,0x40,0x0D,0x23,0x00,0x04,0x01,0xD0,0x96};
uint8_t cmdB7[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x9F,0x8E,0x40,0x0D,0x23,0x00,0x05,0x01,0x83,0x16};
uint8_t cmdB8[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x6C,0x93,0x40,0x0D,0x23,0x00,0x02,0x01,0x46,0x09};
uint8_t cmdB9[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x38,0x98,0x40,0x0D,0x23,0x00,0x03,0x01,0x4B,0x4E};
uint8_t cmdB10_1[] = {0x55,0x0E,0x04,0x66,0x02,0x0B,0x56,0x9D,0x40,0x00,0x32,0x11,0x3E,0xA4};
uint8_t cmdB10_2[] = {0x55,0x15,0x04,0xA9,0x02,0x0B,0x64,0x9D,0x40,0x21,0x10,0x00,0x00,0x00,0x00,0xF2,0x00,0x00,0x00,0x8C,0x04};
uint8_t cmdB11_1[] = {0x55,0x3F,0x04,0x8F,0x03,0x0B,0xCB,0xA1,0x40,0x0D,0x23,0x00,0x00,0x01,0x08,0x00,0x2C,0x05,0x8C,0x90,0xDD,0x49,0x5E,0xE0,0x2E,0xDD,0x14,0xD9,0xAD,0x91,0x76,0x02,0x02,0x07,0x95,0x23,0x56,0x7B,0x63,0x05,0x61,0x01,0xA8,0x46,0x66,0xDB,0x8C,0xA9,0x81,0x05,0x5E,0x8F,0xAB,0x07,0xB2,0x51,0xCE,0xAA,0x3B,0xBA,0x2E,0xE6,0xCF};
uint8_t cmdB11_2[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x25,0xA2,0x40,0x0D,0xD2,0x00,0x00,0x00,0x82,0xC0};
uint8_t cmdB12[] = {0x55,0x10,0x04,0x56,0x03,0x0B,0x91,0xA6,0x40,0x0D,0x23,0x00,0x01,0x01,0x81,0xFC};

uint16_t cmd39_start = 104;
uint16_t cmd20_start = 92;
uint16_t cmd14_start = 104; 
uint16_t cmdC1_start = 104;
uint16_t cmdD1_start = 104;
uint16_t cmdC2_start = 52;
uint16_t cmdID_start = 52;
uint16_t cmdC3_start = 52;
uint16_t cmdD2_start = 44;

uint8_t c1[] = {0x55,0x17,0x04,0x38,0xEB,0x0B,0x00,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8F,0xBD};
uint8_t c2[] = {0x55,0x17,0x04,0x38,0xEB,0x0B,0x02,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xDB,0x2D};
uint8_t c3[] = {0x55,0x17,0x04,0x38,0xEB,0x0B,0x04,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x36,0x95};
uint8_t c4[] = {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x06,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x61};
uint8_t c5[] = {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x07,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFD,0x1F};
uint8_t c6[] = {0x55,0x17,0x04,0x38,0xEB,0x0B,0x08,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFD,0xEC};
uint8_t c7[] = {0x55,0x11,0x04,0x92,0xEB,0x0B,0x09,0x00,0x40,0x0D,0x17,0x00,0x00,0x00,0x00,0x90,0x88};
uint8_t c8[] = {0x55,0x11,0x04,0x92,0xEB,0x0B,0x0A,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x83,0xCC};
uint8_t c9[] = {0x55,0x11,0x04,0x92,0xEB,0x0B,0x0B,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x3A,0x8A};
uint8_t c10[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x0C,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB5,0x2D};
uint8_t c11[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x0D,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x61,0x25};
uint8_t c12[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x0E,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x74,0x8E};
uint8_t c13[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x0F,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3A,0x1C};
uint8_t c14[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x11,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xDA,0x9A};
uint8_t c15[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x12,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x99,0x47};
uint8_t c16[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x13,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0xC7};
uint8_t c17[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x15,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x3F,0xA5};
uint8_t c18[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x16,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD5,0xE9};
uint8_t c19[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x18,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x19,0x4E};
uint8_t c20[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x1A,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x17,0x33};
uint8_t c21[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x1B,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE5,0x8B};
uint8_t c22[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x1C,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x66};
uint8_t c23[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x1E,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xF2,0x0C};
uint8_t c24[]= {0x55,0x12,0x04,0xC7,0xEB,0x0B,0x1F,0x00,0x40,0x0D,0xC4,0x00,0x00,0x00,0x00,0x40,0xDD,0x57};
uint8_t c25[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x20,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x56,0xF0};
uint8_t c26[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x22,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x70,0x44};
uint8_t c27[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x23,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFB,0x49};
uint8_t c28[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x24,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xEF,0xD8};
uint8_t c29[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x26,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x95,0x7B};
uint8_t c30[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x27,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x2C,0x3D};
uint8_t c31[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x28,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0xA1};
uint8_t c32[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x2A,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xBA,0x3B};
uint8_t c33[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x2B,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8D,0xF8};
uint8_t c34[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x2C,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xA5,0x9F};
uint8_t c35[]= {0x55,0x12,0x04,0xC7,0xEB,0x0B,0x2D,0x00,0x40,0x0D,0xC4,0x00,0x00,0x00,0x00,0x40,0x74,0x71};
uint8_t c36[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x2E,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC9,0x19};
uint8_t c37[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x30,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x1E,0x20};
uint8_t c38[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x31,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x62};
uint8_t c39[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x32,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0xC2};
uint8_t c40[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x34,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xFB,0x1F};
uint8_t c41[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x35,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x42,0x59};
uint8_t c42[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x36,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5F,0xEA};
uint8_t c43[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x38,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xD4,0x5F};
uint8_t c44[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x39,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8E,0xD3};
uint8_t c45[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x3A,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x94,0x93};
uint8_t c46[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x3C,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x31,0x60};
uint8_t c47[]= {0x55,0x12,0x04,0xC7,0xEB,0x0B,0x3D,0x00,0x40,0x0D,0xC4,0x00,0x00,0x00,0x00,0x40,0x26,0xA3};
uint8_t c48[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x3E,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2D,0xBB};
uint8_t c49[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x40,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xD0,0xCE};
uint8_t c50[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x41,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x2D,0x83};
uint8_t c51[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x42,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC1,0xD1};
uint8_t c52[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x43,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0xFE};
uint8_t c53[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x45,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xC8,0xBC};
uint8_t c54[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x46,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x8B,0x61};
uint8_t c55[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x47,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFA,0xD6};
uint8_t c56[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x49,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xE7,0xFC};
uint8_t c57[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x4A,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB7,0x60};
uint8_t c58[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x4B,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x31,0xAF};
uint8_t c59[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x4D,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x02,0xC3};
uint8_t c60[]= {0x55,0x12,0x04,0xC7,0xEB,0x0B,0x4E,0x00,0x40,0x0D,0xC4,0x00,0x00,0x00,0x00,0x40,0xD3,0xF8};
uint8_t c61[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x4F,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x88,0x87};
uint8_t c62[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x51,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xB9,0x7C,0x55,0x11,0x04};
uint8_t c63[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x53,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA7,0x5C};
uint8_t c64[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x55,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x5C,0x43};
uint8_t c65[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x56,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAF,0xF4};
uint8_t c66[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x57,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x74};
uint8_t c67[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x59,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x73,0x03};
uint8_t c68[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x5A,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0x30,0xDE};
uint8_t c69[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x5B,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD5,0x0D};
uint8_t c70[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x5D,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x96,0x3C};
uint8_t c71[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x5F,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6C,0x25};
uint8_t c72[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x61,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x14,0x74};
uint8_t c73[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x62,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6B,0x2A};
uint8_t c74[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x63,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9A,0xB3};
uint8_t c75[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x65,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xF1,0x4B};
uint8_t c76[]= {0x55,0x12,0x04,0xC7,0xEB,0x0B,0x66,0x00,0x40,0x0D,0xC4,0x00,0x00,0x00,0x00,0x40,0x4F,0x3D};
uint8_t c77[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x67,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x23,0x9B};
uint8_t c78[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x69,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xDE,0x0B};
uint8_t c79[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x6A,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1D,0x9B};
uint8_t c80[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x6B,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE8,0xE2};
uint8_t c81[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x6D,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x3B,0x34,0x55,0x11,0xC4};
uint8_t c82[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x6F,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x51,0xCA};
uint8_t c83[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x71,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x80,0x8B};
uint8_t c84[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x72,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0xC3,0x56};
uint8_t c85[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x73,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x11};
uint8_t c86[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x75,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x65,0xB4};
uint8_t c87[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x76,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x05,0x0F};
uint8_t c88[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x77,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC7,0x39};
uint8_t c89[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x79,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x4A,0xF4};
uint8_t c90[]= {0x55,0x12,0x04,0xC7,0xEB,0x0B,0x7A,0x00,0x40,0x0D,0xC4,0x00,0x00,0x00,0x00,0x40,0xA8,0x36};
uint8_t c91[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x7B,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0xB0,0x6F};
uint8_t c92[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x7C,0x00,0x40,0x0D,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA7,0x43};
uint8_t c93[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x7D,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE1,0xF8};
uint8_t c94[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x7F,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x55,0x50};
uint8_t c95[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x80,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x64,0xEC};
uint8_t c96[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x81,0x00,0x40,0x0D,0x03,0x00,0x00,0x00,0x00,0xDD,0xAA};
uint8_t c97[]= {0x55,0x17,0x04,0x38,0xEB,0x0B,0x82,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xAE,0x12};
uint8_t c98[]= {0x55,0x11,0x04,0x92,0xEB,0x0B,0x84,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x81,0xD3};
uint8_t c99[]= {0x55,0x16,0x04,0xFC,0xEB,0x0B,0x85,0x00,0x40,0x0D,0xC0,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE2,0x3A};
uint8_t c100[]={0x55,0x17,0x04,0x38,0xEB,0x0B,0x86,0x00,0x40,0x0D,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0x3A};
uint8_t c101[]={0x55,0x11,0x04,0x92,0xEB,0x0B,0x84,0x00,0x40,0x0D,0x02,0x00,0x00,0x00,0x00,0x81,0xD3};

DJIBattery::DJIBattery(HardwareSerial &serial_peripheral, uint8_t pin_control)
{
    this->batteryPort = &serial_peripheral;
    this->pin_control = pin_control;
}

DJIBattery::~DJIBattery() {}

bool DJIBattery::init()
{
    // Null check the serial interface
    if (this->batteryPort == nullptr)
    {
        return false;
    }

    // Initialize the serial link to 9600 baud with 8 data bits and no parity bits, per the Daly BMS spec
    this->batteryPort->begin(BATTERY_PORT_BAUDRATE);

    pinMode(this->pin_control, OUTPUT);
    digitalWrite(this->pin_control, BATTERY_PORT_RECEIVE);
    return true;
}

bool DJIBattery::update(HardwareSerial &debugPort)
{
    /*
    cmd39_start = 104;
    cmd20_start = 92;
    cmd14_start = 104; 
    cmdC1_start = 104;
    cmdD1_start = 104;
    cmdC2_start = 52;
    cmdID_start = 52;
    cmdC3_start = 52;
    cmdD2_start = 44;  

    if (g_battery.numberCharge == -1)
    {
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd_11,   ELEMENTS(cmd_11),   14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd_13,   ELEMENTS(cmd_13),   14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd_15,   ELEMENTS(cmd_15),   32, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd_17,   ELEMENTS(cmd_17),   54, CHAR_NUMCHARGER,    &lv_success);
        vTaskDelay((500L * configTICK_RATE_HZ) / 1000L);
    }

    if (g_battery.seriNumber[0] == 0)
    {
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd_297,  ELEMENTS(cmd_279),  44, CHAR_SNPIN,         &lv_success);      
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        portSendReceive(cmd_303,  ELEMENTS(cmd_303),  39, CHAR_EXCEPTCASE,    &lv_success);
        portSendReceive(cmd_305,  ELEMENTS(cmd_305),  20, CHAR_EXCEPTCASE,    &lv_success);
        portSendReceive(cmd_307,  ELEMENTS(cmd_307),  14, CHAR_EXCEPTCASE,    &lv_success);
        portSendReceive(cmd_309,  ELEMENTS(cmd_309),  43, CHAR_CELL,          &lv_success); // pin
        portSendReceive(cmd_311,  ELEMENTS(cmd_311),  63, CHAR_4PARAM,        &lv_success); 
    }

    for (uint8_t x = 1; x < 30; x++)
    {
        portSendReceive(cmd39,cmd39_sub,6,7,20,21,&cmd39_start);
        portSendReceive(cmd14,cmd14_sub,6,7,12,13,&cmd14_start);
        portSendReceive(cmdC1,cmdC1_sub,6,7,12,13,&cmdC1_start);
        portSendReceive(cmdD1,cmdD1_sub,6,7,12,13,&cmdD1_start);
        portSendReceive(cmdC2,cmdC2_sub,6,7,15,16,&cmdC2_start);
        portSendReceive(cmdC3,cmdC3_sub,6,7,15,16,&cmdC3_start);
        portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        if(x == 5) 
        {
            portSendReceive(cmdD2,cmdD2_sub,6,7,15,16,&cmdD2_start);
            portSendReceive(cmdD2,   ELEMENTS(cmdD2),     63, CHAR_EXCEPTCASE,       &lv_success);
        }
        if ((x == 21) || (x == 22) || (x == 29))
        {
            portSendReceive(cmdD2,cmdD2_sub,6,7,15,16,&cmdD2_start);
            portSendReceive(cmdD2,   ELEMENTS(cmdD2),     63, CHAR_EXCEPTCASE,       &lv_success);
        }
        portSendReceive(cmd1,   ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        if(x == 10) portSendReceive(cmdB10_1, ELEMENTS(cmdB10_1), 37, CHAR_EXCEPTCASE,       &lv_success);
        portSendReceive(cmd1,   ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        if(x == 10) 
        {
            portSendReceive(cmdB10_2, ELEMENTS(cmdB10_2), 63, CHAR_EXCEPTCASE,       &lv_success);
            for (int i = 0; i < 300; i++)
            {
                if (batteryPort.available())
                {
                    uint8_t lv_bytetemp = batteryPort.read();
                    //ConsoleDebug.print(byteReceived,HEX);
                    //ConsoleDebug.print(" -");
                }
            }
        }
        portSendReceive(cmd39,   ELEMENTS(cmd39),     39, CHAR_EXCEPTCASE,       &lv_success);
        if(x == 6) portSendReceive(cmdB6, ELEMENTS(cmdB6), 16, CHAR_EXCEPTCASE,       &lv_success);
        if(x == 8) portSendReceive(cmdB8, ELEMENTS(cmdB8), 16, CHAR_EXCEPTCASE,       &lv_success);
        if(x == 12) portSendReceive(cmdB12, ELEMENTS(cmdB12), 61, CHAR_EXCEPTCASE,       &lv_success);
        portSendReceive(cmd1,   ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success);
        if(x == 7) portSendReceive(cmdB7, ELEMENTS(cmdB7), 34, CHAR_EXCEPTCASE,       &lv_success);
        if(x == 9) portSendReceive(cmdB9, ELEMENTS(cmdB9), 63, CHAR_EXCEPTCASE,       &lv_success);
        if(x == 11) 
        {
            portSendReceive(cmdB11_1, ELEMENTS(cmdB11_1), 16, CHAR_EXCEPTCASE,       &lv_success);
            portSendReceive(cmdB11_2, ELEMENTS(cmdB11_2), 20, CHAR_EXCEPTCASE,       &lv_success);
        }
        else
        {
            portSendReceive(cmd20,cmd20_sub,6,7,14,15,&cmd20_start);
            portSendReceive(cmd20, ELEMENTS(cmd20), 20, CHAR_EXCEPTCASE,       &lv_success);
        }
        if(((x >= 10) && (x < 20)) || ((x >= 26) && (x < 30)) )
        {
            cmd14[11] = 0x01;
            portSendReceive(cmd14,   ELEMENTS(cmd14),     14, CHAR_EXCEPTCASE,       &lv_success);
            cmd14[11] = 0x00;
        }
        else
        {
            portSendReceive(cmd14,   ELEMENTS(cmd14),     14, CHAR_EXCEPTCASE,       &lv_success);
        }
        
        if(x == 7) 
        {
            portSendReceive(cmdID,cmdID_sub,6,7,11,12,&cmdID_start);
            portSendReceive(cmdID,   ELEMENTS(cmdID),     44, CHAR_SNPIN,       &lv_success);
        }
        portSendReceive(cmdC1,   ELEMENTS(cmdC1),     43, CHAR_CELL,       &lv_success);
        if(x != 10) portSendReceive(cmdD1,   ELEMENTS(cmdD1),     63, CHAR_4PARAM, &lv_success);
        portSendReceive(cmdC2,   ELEMENTS(cmdC2),     43, CHAR_CELL,       &lv_success);
        portSendReceive(cmdID,cmdID_sub,6,7,11,12,&cmdID_start);
        portSendReceive(cmdID,   ELEMENTS(cmdID),     44, CHAR_SNPIN,       &lv_success);
        portSendReceive(cmdC3,   ELEMENTS(cmdC3),     43, CHAR_CELL,       &lv_success);
        if((x%2 == 1) && (x != 21) && (x != 29))
        {
            portSendReceive(cmdD2,cmdD2_sub,6,7,15,16,&cmdD2_start);
            portSendReceive(cmdD2,   ELEMENTS(cmdD2),     63, CHAR_EXCEPTCASE,       &lv_success);
        }
    }
    */
    if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success, debugPort)) return false;
    
    // setup communicate
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    vTaskDelay((100L * pdMS_TO_TICKS(1)) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_11,   ELEMENTS(cmd_11),   14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_13,   ELEMENTS(cmd_13),   14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_15,   ELEMENTS(cmd_15),   32, CHAR_CONNECT,       &lv_success)) return false;
    if(!portSendReceive(cmd_17,   ELEMENTS(cmd_17),   54, CHAR_NUMCHARGER,    &lv_success, debugPort)) return false;

    // check done 
    if (get.active && !check_return_active)
    {
        check_return_active = true;
        return true;
    }
    

    vTaskDelay((50L * pdMS_TO_TICKS(1)) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_27,   ELEMENTS(cmd_27),   39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_31,   ELEMENTS(cmd_31),   20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_33,   ELEMENTS(cmd_33),   14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_35,   ELEMENTS(cmd_35),   43, CHAR_CONNECT,       &lv_success)) return false; // pin
    if(!portSendReceive(cmd_37,   ELEMENTS(cmd_37),   63, CHAR_4PARAM,        &lv_success, debugPort)) return false;

    // begin communicate
    vTaskDelay((50L * pdMS_TO_TICKS(1)) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_48,   ELEMENTS(cmd_48),   39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_50,   ELEMENTS(cmd_50),   16, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_54,   ELEMENTS(cmd_54),   20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_56,   ELEMENTS(cmd_56),   14, CHAR_CONNECT,       &lv_success)) return false;
    if(!portSendReceive(cmd_58,   ELEMENTS(cmd_58),   43, CHAR_CELL,          &lv_success, debugPort)) return false; // pin
    // if(!portSendReceive(cmd_60,   ELEMENTS(cmd_60),   63, CHAR_4PARAM,        &lv_success)) return false;

    vTaskDelay((50L * pdMS_TO_TICKS(1)) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;        
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_72,   ELEMENTS(cmd_72),   39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_74,   ELEMENTS(cmd_74),   34, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_78,   ELEMENTS(cmd_78),   20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_80,   ELEMENTS(cmd_80),   14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_82,   ELEMENTS(cmd_82),   43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_84,   ELEMENTS(cmd_84),   63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;        
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_95,   ELEMENTS(cmd_95),   39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_97,   ELEMENTS(cmd_97),   16, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_101,  ELEMENTS(cmd_101),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_103,  ELEMENTS(cmd_103),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_105,  ELEMENTS(cmd_105),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_107,  ELEMENTS(cmd_107),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;        
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_118,  ELEMENTS(cmd_118),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_120,  ELEMENTS(cmd_120),  63, CHAR_CONNECT,       &lv_success)) return false; // 138 DJI company
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_124,  ELEMENTS(cmd_124),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_126,  ELEMENTS(cmd_126),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_128,  ELEMENTS(cmd_128),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_130,  ELEMENTS(cmd_130),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;        
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_142,  ELEMENTS(cmd_142),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_146,  ELEMENTS(cmd_146),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_148,  ELEMENTS(cmd_148),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_150,  ELEMENTS(cmd_150),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_152,  ELEMENTS(cmd_152),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;        
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_164,  ELEMENTS(cmd_164),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_166,  ELEMENTS(cmd_166),  16, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_170,  ELEMENTS(cmd_170),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_172,  ELEMENTS(cmd_172),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_174,  ELEMENTS(cmd_174),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_176,  ELEMENTS(cmd_176),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;       
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_189,  ELEMENTS(cmd_189),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_191,  ELEMENTS(cmd_191),  62, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_195,  ELEMENTS(cmd_195),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_197,  ELEMENTS(cmd_197),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_199,  ELEMENTS(cmd_199),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_201,  ELEMENTS(cmd_201),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;       
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_213,  ELEMENTS(cmd_213),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_218,  ELEMENTS(cmd_218),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_220,  ELEMENTS(cmd_220),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_222,  ELEMENTS(cmd_222),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_224,  ELEMENTS(cmd_224),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;       
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_236,  ELEMENTS(cmd_236),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_240,  ELEMENTS(cmd_240),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_242,  ELEMENTS(cmd_242),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_244,  ELEMENTS(cmd_244),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_246,  ELEMENTS(cmd_246),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;       
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_257,  ELEMENTS(cmd_257),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_262,  ELEMENTS(cmd_262),  20, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_264,  ELEMENTS(cmd_264),  14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_266,  ELEMENTS(cmd_266),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_268,  ELEMENTS(cmd_268),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;       
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_279,  ELEMENTS(cmd_279),  39, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_283,  ELEMENTS(cmd_283),  20, CHAR_EXCEPTCASE,    &lv_success)) return false;
    // if(!portSendReceive(cmd_286,  ELEMENTS(cmd_286),  14, CHAR_EXCEPTCASE,    &lv_success)) return false;
    // if(!portSendReceive(cmd_288,  ELEMENTS(cmd_288),  43, CHAR_CELL,          &lv_success)) return false; // pin
    // if(!portSendReceive(cmd_290,  ELEMENTS(cmd_290),  63, CHAR_4PARAM,        &lv_success)) return false;

    // vTaskDelay((50L * configTICK_RATE_HZ) / 1000L);
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    if(get.seriNumber[0] < 1)
    {if(!portSendReceive(cmd_297,  ELEMENTS(cmd_279),  44, CHAR_SNPIN,         &lv_success, debugPort)) return false; }     
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd1,     ELEMENTS(cmd1),     14, CHAR_CONNECT,       &lv_success)) return false;
    // if(!portSendReceive(cmd_303,  ELEMENTS(cmd_303),  39, CHAR_EXCEPTCASE,    &lv_success)) return false;
    // if(!portSendReceive(cmd_305,  ELEMENTS(cmd_305),  20, CHAR_EXCEPTCASE,    &lv_success)) return false;
    // if(!portSendReceive(cmd_307,  ELEMENTS(cmd_307),  14, CHAR_EXCEPTCASE,    &lv_success)) return false;
    // if(!portSendReceive(cmd_309,  ELEMENTS(cmd_309),  43, CHAR_CELL,          &lv_success, debugPort)) return false; // pin
    // if(!portSendReceive(cmd_311,  ELEMENTS(cmd_311),  63, CHAR_4PARAM,        &lv_success, debugPort)) return false;  
    vTaskDelay((50L * pdMS_TO_TICKS(1)) / 1000L);

    return true;
}

bool DJIBattery::updateT25T50(HardwareSerial &debugPort)
{
    if (!lv_charge_t25t50_active)
    {
        if(!portSendReceive(c1,  ELEMENTS(c1),  32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c2,  ELEMENTS(c2),  32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c3,  ELEMENTS(c3),  32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c4,  ELEMENTS(c4),  54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c5,  ELEMENTS(c5),  54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c6,  ELEMENTS(c6),  32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c7,  ELEMENTS(c7),  19, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c8,  ELEMENTS(c8),  63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);

        if(!portSendReceive(c9,  ELEMENTS(c9),  43, CHAR_CELL,              &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c10, ELEMENTS(c10), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c11, ELEMENTS(c11), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c12, ELEMENTS(c12), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c13, ELEMENTS(c13), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c14, ELEMENTS(c14), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);

        if(!portSendReceive(c15, ELEMENTS(c15), 43, CHAR_CELL,              &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c16, ELEMENTS(c16), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c17, ELEMENTS(c17), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c18, ELEMENTS(c18), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c19, ELEMENTS(c19), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c20, ELEMENTS(c20), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c21, ELEMENTS(c21), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c22, ELEMENTS(c22), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c23, ELEMENTS(c23), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c24, ELEMENTS(c24), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c25, ELEMENTS(c25), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c26, ELEMENTS(c26), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c27, ELEMENTS(c27), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c28, ELEMENTS(c28), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c29, ELEMENTS(c29), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);

        if(!portSendReceive(c30, ELEMENTS(c30), 43, CHAR_CELL,              &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c31, ELEMENTS(c31), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c32, ELEMENTS(c32), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c33, ELEMENTS(c33), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c34, ELEMENTS(c34), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c35, ELEMENTS(c35), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c36, ELEMENTS(c36), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c37, ELEMENTS(c37), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c38, ELEMENTS(c38), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c39, ELEMENTS(c39), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c40, ELEMENTS(c40), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);

        if(!portSendReceive(c41, ELEMENTS(c41), 43, CHAR_CELL,              &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c42, ELEMENTS(c42), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c43, ELEMENTS(c43), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c44, ELEMENTS(c44), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c45, ELEMENTS(c45), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c46, ELEMENTS(c46), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c47, ELEMENTS(c47), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c48, ELEMENTS(c48), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c49, ELEMENTS(c49), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c50, ELEMENTS(c50), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c51, ELEMENTS(c51), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c52, ELEMENTS(c52), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c53, ELEMENTS(c53), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);

        if(!portSendReceive(c54, ELEMENTS(c54), 43, CHAR_CELL,              &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c55, ELEMENTS(c55), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c56, ELEMENTS(c56), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c57, ELEMENTS(c57), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c58, ELEMENTS(c58), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c59, ELEMENTS(c59), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c60, ELEMENTS(c60), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c61, ELEMENTS(c61), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c62, ELEMENTS(c62), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c63, ELEMENTS(c63), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c64, ELEMENTS(c64), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c65, ELEMENTS(c65), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c66, ELEMENTS(c66), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
        if(!portSendReceive(c67, ELEMENTS(c67), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
        vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    }
    if(!portSendReceive(c68, ELEMENTS(c68), 43, CHAR_CELL,              &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c69, ELEMENTS(c69), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c70, ELEMENTS(c70), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c71, ELEMENTS(c71), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c72, ELEMENTS(c72), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c73, ELEMENTS(c73), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c74, ELEMENTS(c74), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c75, ELEMENTS(c75), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c76, ELEMENTS(c76), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c77, ELEMENTS(c77), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c78, ELEMENTS(c78), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c79, ELEMENTS(c79), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c80, ELEMENTS(c80), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c81, ELEMENTS(c81), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c82, ELEMENTS(c82), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c83, ELEMENTS(c83), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);

    if(!portSendReceive(c84, ELEMENTS(c84), 43, CHAR_CELL,              &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c85, ELEMENTS(c85), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c86, ELEMENTS(c86), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c87, ELEMENTS(c87), 28, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c88, ELEMENTS(c88), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c89, ELEMENTS(c89), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c90, ELEMENTS(c90), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c91, ELEMENTS(c91), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c92, ELEMENTS(c92), 54, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c93, ELEMENTS(c93), 32, CHAR_EXCEPTCASE,        &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c94, ELEMENTS(c94), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    if(!portSendReceive(c95, ELEMENTS(c95), 63, CHAR_4PARAM,            &lv_success, debugPort)) return false;
    vTaskDelay((lv_time_charge_t25t50 * pdMS_TO_TICKS(1)) / 1000L);
    return true;
}

bool DJIBattery::portSendReceive (uint8_t cmd[], uint8_t cmd_length, uint8_t receive_length, char package, bool *success, HardwareSerial &debugPort)
{
    vfs_receiveFail = false;
    vfs_recCheckCell = false;
    vfs_countReceive = 0; 
    vfs_countTemp = 0;
    memset(vfs_cmdRecSnPin, 0, 44);
    memset(vfs_cmdRec4Param, 0, 63);
    memset(vfs_cmdRecNumCharger, 0, 54);
    memset(vfs_cmdRecCell, 0, 43);
    memset(vfs_cellValue, 0, 14);
    vfs_byteReceive = 0;
    // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
    while (!*success)
    {
        digitalWrite(this->pin_control, BATTERY_PORT_SEND);
        for (uint8_t i = 0; i < cmd_length; i++)
        {
            this->batteryPort->write(cmd[i]);
            this->batteryPort->flush();         
        }
        digitalWrite(this->pin_control, BATTERY_PORT_RECEIVE); 

        vfs_time = xTaskGetTickCount();
        // vTaskDelay((7L * pdMS_TO_TICKS(1)) / 1000L);
        while ((this->batteryPort->available() < receive_length - 5) && (!vfs_receiveFail) )
        {
            if ((unsigned long)(xTaskGetTickCount() - vfs_time) > 100)
            {
                // int _delay = random(70,300);
                // vTaskDelay((_delay * pdMS_TO_TICKS(1))/1000000);
                debugPort.print("p: ");
                debugPort.print(this->batteryPort->available());
                debugPort.print(" ");
                debugPort.println(package);
                vfs_receiveFail = true;   
                // get.active = false;           
                break;
            }   
        }

        if (!vfs_receiveFail)
        {
            get.countError = 0;
            switch (package)
            {
            case CHAR_CELL:
                vfs_countTemp = 0 ;
                while (this->batteryPort->available())
                {
                    if(vfs_countTemp > receive_length) break;
                    vfs_cmdRecCell[vfs_countTemp] = this->batteryPort->read();
                    // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
                    vfs_countTemp++;
                    if (!this->batteryPort->available()) break;   
                }
                vfs_recCheckCell = true;
                if (vfs_recCheckCell)
                {
                    for (uint8_t i = 0; i < 14; i++)
                    {
                        vfs_cellValue[i] = (vfs_cmdRecCell[2*i+14] << 8) | vfs_cmdRecCell[2*i+13]; 
                        if ((vfs_cellValue[i] > 5000) || (vfs_cellValue[i] < 1000))
                        {
                            break;
                        }
                        else
                        {
                            // memcpy((uint8_t*)get.cell, vfs_cellValue, sizeof(get.cell));
                            get.cell[i] = vfs_cellValue[i];
                        }
                    }
                }
                else
                {

                }
                vfs_recCheckCell = false;             
                break;
            case CHAR_NUMCHARGER: // 0x48,0x71,0x00,0x00,0x04,0x00,0xB0,0xE5 - number charger    
                vfs_countTemp = 0 ;
                while (this->batteryPort->available())
                {
                    if(vfs_countTemp > receive_length) break;
                    vfs_cmdRecNumCharger[vfs_countTemp] = this->batteryPort->read();
                    // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
                    vfs_countTemp++;
                    if (!this->batteryPort->available()) break;   
                }           

                for (int i = 0; i < receive_length-12; i++)
                {
                    uint8_t begin1   = vfs_cmdRecNumCharger[i];
                    uint8_t begin2   = vfs_cmdRecNumCharger[i+1];
                    uint8_t end1     = vfs_cmdRecNumCharger[i+2];
                    uint8_t end2     = vfs_cmdRecNumCharger[i+3];
                    if ((begin1 == 0x4C) && (begin2 == 0x03) && (end1 == 0x80) && (end2 == 0x0D))
                    {
                        uint16_t numcharger = (vfs_cmdRecNumCharger[i+12] << 8) | (vfs_cmdRecNumCharger[i+11]);
                        get.capacity = (vfs_cmdRecNumCharger[i+8] << 8) | (vfs_cmdRecNumCharger[i+7]);
                        get.numberCharge = numcharger;
                        break;
                    }  
                } 

                break;
            case CHAR_4PARAM: // 0x80,0x0D,0x02,0x00,0x00,0xA2,0xD3,0x00,0x00
                vfs_countTemp = 0 ;
                while (this->batteryPort->available())
                {
                    if(vfs_countTemp > receive_length) break;
                    vfs_cmdRec4Param[vfs_countTemp] = this->batteryPort->read();
                    // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
                    vfs_countTemp++;
                    if (!this->batteryPort->available()) break;   
                }  

                for (int i = 0; i < receive_length-24; i++)
                {
                    uint8_t begin1   = vfs_cmdRec4Param[i];
                    uint8_t begin2   = vfs_cmdRec4Param[i+1];
                    uint8_t begin3   = vfs_cmdRec4Param[i+2];
                    uint8_t end1     = vfs_cmdRec4Param[i+7];
                    uint8_t end2     = vfs_cmdRec4Param[i+8];
                    if ((begin1 == 0x80) && (begin2 == 0x0D) && (begin3 == 0x02) && (end1 == 0x00) && (end2 == 0x00))
                    {
                        uint16_t voltage_total = (vfs_cmdRec4Param[i+6] << 8) | vfs_cmdRec4Param[i+5];
                        uint32_t current_total = (vfs_cmdRec4Param[i+12] << 24) | (vfs_cmdRec4Param[i+11] << 16)
                                                 |(vfs_cmdRec4Param[i+10] << 8) | (vfs_cmdRec4Param[i+9]);
                        uint16_t temperature = (vfs_cmdRec4Param[i+22] << 8) | vfs_cmdRec4Param[i+21]; // 14 13 17 18 21 22 
                        uint8_t voltage_percent = vfs_cmdRec4Param[i+24];                       
                        get.voltage = voltage_total;
                        get.current = current_total;
                        if(voltage_percent > 0) get.percent = voltage_percent;
                        get.temperature = temperature;
                        break;
                    }  
                }
                break;
            case CHAR_SNPIN: // 55 2C 04 36 0B 
                vfs_countTemp = 0 ;
                while (this->batteryPort->available())
                {
                    if(vfs_countTemp > receive_length) break;
                    vfs_cmdRecSnPin[vfs_countTemp] = this->batteryPort->read();
                    // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
                    vfs_countTemp++;
                    if (!this->batteryPort->available()) break;   
                } 

                for (uint8_t i = 0; i < receive_length-8; i++)
                {
                    uint8_t begin1   = vfs_cmdRecSnPin[i];
                    uint8_t begin2   = vfs_cmdRecSnPin[i+1];
                    uint8_t begin3   = vfs_cmdRecSnPin[i+2];
                    uint8_t begin4   = vfs_cmdRecSnPin[i+3];
                    uint8_t begin5   = vfs_cmdRecSnPin[i+4];
                    if ((begin1 == 0x00) && (begin2 == 0x80) && (begin3 == 0x00) && (begin4 == 0x01) && (begin5 == 0x00))
                    {
                        for (uint8_t j = 6; j < 20; j++)
                        {
                            get.seriNumber[j-6] = vfs_cmdRecSnPin[i+j];
                        }
                        for (uint8_t j = 29; j > 25; j--)
                        {
                            get.version[29-j] = vfs_cmdRecSnPin[i+j];
                        }
                        break;
                    }  
                }
                break;  
            case CHAR_EXCEPTCASE:
                vfs_countReceive = 0;
                for (int i = 0; i < receive_length + 10; i++)
                {
                    if (this->batteryPort->available())
                    {
                        vfs_byteReceive = this->batteryPort->read();
                        // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
                        vfs_countReceive++;
                    }
                }
                break;
            case CHAR_CONNECT:
                vfs_countReceive = 0;
                for (int i = 0; i < receive_length + 10; i++)
                {
                    if (this->batteryPort->available())
                    {
                        vfs_byteReceive = this->batteryPort->read();
                        // vTaskDelay((1L * configTICK_RATE_HZ) / 1000L);
                        vfs_countReceive++;
                    }
                }
                if (vfs_countReceive > 10)
                {
                    get.active = true;
                }
                // else
                // {
                //     get.active = false;
                // }
                break;
            }

            *success = true;
        }
        else
        {
            get.countError++;
            if (get.countError > ((get.seriNumber[0] > 0) ? 10 : 2)) {
                get.active = false;
                check_return_active = false;
                if(get.countError > 200) get.countError = 12;
                while(this->batteryPort->available())
                {
                    uint8_t vfs_unnecessary = this->batteryPort->read();
                    if (!this->batteryPort->available()) break;   
                }
                this->batteryPort->clearWriteError();
                return false;
            }
            while(this->batteryPort->available())
            {
                uint8_t vfs_unnecessary = this->batteryPort->read();
                if (!this->batteryPort->available()) break;   
            }
            this->batteryPort->clearWriteError();
            // vTaskDelay((10 * pdMS_TO_TICKS(1))/1000000);
        }
        vfs_receiveFail = false;
    }

    while(this->batteryPort->available())
    {
        uint8_t vfs_unnecessary = this->batteryPort->read();
        if (!this->batteryPort->available()) break;   
    }

    *success = false;
    return get.active;
}

void DJIBattery::changeCMDSub(uint8_t cmd[], uint8_t cmd_sub[], uint8_t x, uint8_t y, uint8_t z, uint8_t t, uint16_t *start)
{
    cmd[x] = cmd_sub[*start];
    cmd[y] = cmd_sub[*start+1];
    cmd[z] = cmd_sub[*start+2];
    cmd[t] = cmd_sub[*start+3];
    *start = *start + 4;
}
